plugins {
    id 'maven-publish'
    id 'babric-loom' version '1.0.1'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    gluedMinecraftJar()
    customMinecraftManifest.set("https://babric.github.io/manifest-polyfill/${minecraft_version}.json")
}

idea {
    module {
        downloadJavadoc = true
    }
}

eclipse {
    classpath {
        downloadJavadoc = true
    }
}

repositories {
    maven {
        name = "Glass Snapshots"
        url "https://maven.glass-launcher.net/snapshots"
    }
    maven {
        name = "Glass Releases"
        url "https://maven.glass-launcher.net/releases"
    }
    maven {
        name = "Babric"
        url "https://maven.glass-launcher.net/babric"
    }
    maven {
        name = 'Froge'
        url 'https://maven.minecraftforge.net/'
    }
    maven {
        name = "Jitpack"
        url "https://jitpack.io/"
    }
    mavenCentral()
}

task moveRemappedSrc {
    if (project.name.equals("station-api"))
        return
    doLast {
        delete './src/main/java/'
        ant.move file: './remappedSrc/net',
                todir: './src/main/java/'
    }
}

dependencies {
    // to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.glasslauncher:bin:${project.yarn_mappings}"
    modImplementation "babric:fabric-loader:${project.loader_version}"

    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.2'

    implementation "org.slf4j:slf4j-api:1.8.0-beta4"
    implementation "org.apache.logging.log4j:log4j-slf4j18-impl:2.17.1"

    // adds some useful annotations for miscellaneous uses. does not add any dependencies, though people without the lib will be missing some useful context hints.
    implementation 'org.jetbrains:annotations:23.0.0'

    modImplementation("net.modificationstation:StationAPI:${project.stapi_version}") {
        exclude module: "fabric-loader"
    }

    modImplementation("com.github.calmilamsy:ModMenu:${project.modmenu_version}") {
        transitive false
    }

    implementation "blue.endless:jankson:1.2.1"
    modImplementation("com.github.calmilamsy:glass-config-api:${project.gcapi_version}") {
        exclude module: "StationAPI"
        exclude module: "fabric-loader"
        exclude module: "cursed-fabric-loader"
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
        maven {
            url = "https://maven.glass-launcher.net/snapshots"
            credentials {
                username "buildbot"
                password "LZWabNJ3RjL0nFLAX1J32uapjK/MocenWRZ+MlAYcmqG3TJYvY5Hl7iRWfPiv9Zn"
            }
        }
    }
}